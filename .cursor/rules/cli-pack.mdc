---
description:
globs:
alwaysApply: false
---
Your goal is to pack up files into a single file using the `repomix` cli.

## Defaults
- Always use `-o tmp/<filename>` so that the file is saved to a `tmp/` directory within the current project.
- Always ignore "tmp"
- Always include token count: use `--token-count-encoding o200k_base`
- Never include line numbers: do NOT use `--output-show-line-numbers`
- Ignore ".cursor/rules" files
- Always copy to the clipboard

## Usage
Usage: repomix [options] [directories...]

Repomix - Pack your repository into a single AI-friendly file

Arguments:
  directories                        list of directories to process (default: ["."])

Options:
  -v, --version                      show version information
  -o, --output <file>                specify the output file name
  --style <type>                     specify the output style (xml, markdown, plain)
  --parsable-style                   ensure output is parsable as its type
  --compress                         perform code compression to reduce token count
  --output-show-line-numbers         add line numbers to each line in the output
  --copy                             copy generated output to system clipboard
  --no-file-summary                  disable file summary section output
  --no-directory-structure           disable directory structure section output
  --no-files                         disable files content output (metadata-only mode)
  --remove-comments                  remove comments
  --remove-empty-lines               remove empty lines
  --header-text <text>               specify the header text
  --instruction-file-path <path>     path to a file containing detailed custom instructions
  --include-empty-directories        include empty directories in the output
  --no-git-sort-by-changes           disable sorting files by git change count
  --include <patterns>               list of include patterns (comma-separated)
  -i, --ignore <patterns>            additional ignore patterns (comma-separated)
  --no-gitignore                     disable .gitignore file usage
  --no-default-patterns              disable default patterns
  --remote <url>                     process a remote Git repository
  --remote-branch <name>             specify the remote branch name, tag, or commit hash
  -c, --config <path>                path to a custom config file
  --init                             initialize a new repomix.config.json file
  --global                           use global configuration (only with --init)
  --no-security-check                disable security check
  --token-count-encoding <encoding>  specify token count encoding (e.g., o200k_base, cl100k_base)
  --mcp                              run as a MCP server
  --top-files-len <number>           number of top files to display
  --verbose                          enable verbose logging for detailed output
  --quiet                            disable all output to stdout
  -h, --help                         display help for command

## Output Formats
- Default: plain text
- Markdown: `--style markdown`
- XML: `--style xml`

## Security
- By default, security checks are enabled. Use `--no-security-check` to disable.

## Configuration
- Initialize config: `repomix --init`
- Use custom config: `-c repomix.config.json`
- Use global config: `--global` (with --init)

## Advanced Features
- Remove comments: `--remove-comments`
- Remove empty lines: `--remove-empty-lines`
- Show line numbers: `--output-show-line-numbers`
- Copy output to clipboard: `--copy`
- Token counting: `--token-count-encoding o200k_base`
- Disable file summary: `--no-file-summary`
- Disable directory structure: `--no-directory-structure`
- Metadata only: `--no-files`
- Include only certain files: `--include "src/**/*.ts,**/*.md"`
- Exclude files: `--ignore "**/*.log,tmp/"`
- Process remote repo: `--remote user/repo --remote-branch main`

## Model-Specific Tips
- Claude: Use XML output, put important instructions at the end
- ChatGPT: Use Markdown, break large codebases into sections
- Gemini: All formats supported, focus on specific areas per request

## Example Commands
# Basic usage
repomix

# Custom output
repomix -o tmp/output.xml --style xml

# Markdown output, compressed, no comments
repomix -o tmp/output.md --style markdown --compress --remove-comments

# Only include TypeScript and Markdown files, ignore tests
repomix --include "src/**/*.ts,**/*.md" --ignore "**/*.test.ts" -o tmp/filtered.md

# Show line numbers, copy to clipboard
repomix --output-show-line-numbers --copy -o tmp/numbered.txt

# Remote repository (GitHub URL)
repomix --remote https://github.com/user/repo --remote-branch main -o tmp/remote.txt

# Initialize config file
repomix --init

# Use custom config
repomix -c repomix.config.json -o tmp/custom.txt


## Post-Processing
- After running repomix, always inspect the reported token count.
- If the token count exceeds 500,000 tokens:
  - Suggest a more aggressive pack by ignoring large or non-essential directories/files.
  - Example: `repomix --ignore "node_modules/,dist/,build/,public/,docs/,**/*.png,**/*.jpg" -o tmp/packed-smaller.md --token-count-encoding o200k_base`
- Review the output and repeat until the token count is manageable for your target LLM.
